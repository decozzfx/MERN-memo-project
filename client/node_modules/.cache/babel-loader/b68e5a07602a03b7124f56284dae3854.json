{"ast":null,"code":"var _jsxFileName = \"/home/decoz/Projects/ReactJS/mern_memo_project/client/src/components/Auth/Auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Avatar, Button, Paper, Grid, Typography, Container, TextField } from '@material-ui/core';\nimport { GoogleLogin } from 'react-google-login';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport useStyles from './styles';\nimport Input from './Input';\nimport Icon from './Icon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  firstName: '',\n  lastName: '',\n  email: '',\n  password: '',\n  confirmPassword: ''\n};\n\nconst Auth = () => {\n  _s();\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [showPassword, setShowPassword] = useState(false);\n  const [isSignup, setIsSignup] = useState(false);\n  const [formData, setFormData] = useState(initialState);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(formData);\n  };\n\n  const handleChange = () => {};\n\n  const handleShowPassword = () => setShowPassword(!showPassword);\n\n  function switchMode() {\n    setIsSignup(!isSignup);\n    setShowPassword(false);\n  }\n\n  const googleSuccess = async res => {\n    const result = res === null || res === void 0 ? void 0 : res.profileObj;\n    const token = res === null || res === void 0 ? void 0 : res.tokenId;\n\n    try {\n      dispatch({\n        type: 'AUTH',\n        payload: {\n          result,\n          token\n        }\n      });\n      navigate('/');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const googleFailure = error => {\n    console.log('Google Sign In was unsuccessful, Try Again Later ' + error);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      elevation: 3,\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        className: classes.avatar,\n        children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: isSignup ? 'Sign Up' : 'Sign In'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.form,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [isSignup && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              name: \"firstName\",\n              label: \"First Name\",\n              handleChange: handleChange,\n              half: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"lastName\",\n              label: \"Last Name\",\n              handleChange: handleChange,\n              half: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"email\",\n            label: \"Email Address\",\n            handleChange: handleChange,\n            type: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"password\",\n            label: \"Password\",\n            handleChange: handleChange,\n            type: showPassword ? 'text' : 'password',\n            handleShowPassword: handleShowPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 21\n          }, this), isSignup && /*#__PURE__*/_jsxDEV(Input, {\n            name: \"confirmPasswod\",\n            label: \"Repeat Password\",\n            handleChange: handleChange,\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.submit,\n          children: isSignup ? 'Sign Up' : 'Sign In'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n          clientId: process.env.REACT_APP_GOOGLE_CLIENT_ID,\n          render: renderProps => /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.googleButton,\n            color: \"primary\",\n            fullWidth: true,\n            onClick: renderProps.onClick,\n            disabled: renderProps.disabled,\n            startIcon: /*#__PURE__*/_jsxDEV(Icon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 36\n            }, this),\n            variant: \"contained\",\n            children: \"Google Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this),\n          onSuccess: googleSuccess,\n          onFailure: googleFailure,\n          cookiePolicy: \"single_host_origin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justifyContent: \"flex-end\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: switchMode,\n              children: isSignup ? 'Already have account? Sign In' : \"Don't have an account? Sign Up \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Auth, \"F540WYJCRbMFLqtvYlxgNTsIsUE=\", false, function () {\n  return [useStyles, useDispatch, useNavigate];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["/home/decoz/Projects/ReactJS/mern_memo_project/client/src/components/Auth/Auth.js"],"names":["React","useState","Avatar","Button","Paper","Grid","Typography","Container","TextField","GoogleLogin","LockOutlinedIcon","useDispatch","useNavigate","useStyles","Input","Icon","initialState","firstName","lastName","email","password","confirmPassword","Auth","classes","dispatch","navigate","showPassword","setShowPassword","isSignup","setIsSignup","formData","setFormData","handleSubmit","e","preventDefault","console","log","handleChange","handleShowPassword","switchMode","googleSuccess","res","result","profileObj","token","tokenId","type","payload","error","googleFailure","paper","avatar","form","submit","process","env","REACT_APP_GOOGLE_CLIENT_ID","renderProps","googleButton","onClick","disabled"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Avatar, Button, Paper, Grid, Typography, Container, TextField } from '@material-ui/core'\nimport {GoogleLogin} from 'react-google-login'\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\nimport { useDispatch } from 'react-redux'\nimport { useNavigate } from 'react-router-dom'\n\nimport useStyles from './styles'\nimport Input from './Input'\nimport Icon from './Icon'\n\nconst initialState = { firstName : '', lastName : '', email : '', password : '', confirmPassword : '' }\n\nconst Auth = () => {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    const navigate = useNavigate()\n\n    const [showPassword, setShowPassword] = useState(false)\n    const [isSignup, setIsSignup] = useState(false)\n    const [formData, setFormData] = useState(initialState)\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        console.log(formData)\n    }\n\n    const handleChange = () => {\n\n    }\n\n    const handleShowPassword = () => setShowPassword(!showPassword) \n\n    function switchMode() {\n        setIsSignup(!isSignup)\n        setShowPassword(false)\n    }\n\n    const googleSuccess = async (res) => {\n        const result = res?.profileObj\n        const token = res?.tokenId\n\n        try {\n            dispatch({ type : 'AUTH', payload : {result, token} })\n\n            navigate('/')\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    const googleFailure = (error) => {\n        console.log('Google Sign In was unsuccessful, Try Again Later '+error)\n    }\n\n  return (\n    <Container component='main' maxWidth='xs'>\n        <Paper className={classes.paper} elevation={3}>\n            <Avatar className={classes.avatar}>\n                <LockOutlinedIcon />\n            </Avatar>\n            <Typography variant='h5'>{isSignup ? 'Sign Up' : 'Sign In'}</Typography>\n            <form className={classes.form} onSubmit={handleSubmit}>\n                <Grid container spacing={2}>\n                    {\n                        isSignup && (\n                            <>\n                                <Input name='firstName' label='First Name' handleChange={handleChange}  half />\n                                <Input name='lastName' label='Last Name' handleChange={handleChange}  half />\n                            </>\n                        )\n                    }\n                    <Input name='email' label='Email Address' handleChange={handleChange} type='email' />\n                    <Input name='password' label='Password' handleChange={handleChange} type={showPassword ? 'text' : 'password'} handleShowPassword={handleShowPassword} />\n                    { isSignup && <Input name='confirmPasswod' label='Repeat Password' handleChange={handleChange} type='password' /> }\n                </Grid>\n                <Button type='submit' fullWidth variant='contained' color='primary' className={classes.submit}>\n                    { isSignup ? 'Sign Up' : 'Sign In'}\n                </Button>\n                <GoogleLogin \n                    clientId={process.env.REACT_APP_GOOGLE_CLIENT_ID}\n                    render={(renderProps) => (\n                        <Button \n                        className={classes.googleButton} \n                        color='primary'\n                        fullWidth \n                        onClick={renderProps.onClick} \n                        disabled={renderProps.disabled} \n                        startIcon={<Icon />} \n                        variant='contained'\n                        >\n                            Google Sign In\n                        </Button>\n                    )}\n                    onSuccess={googleSuccess}\n                    onFailure={googleFailure}\n                    cookiePolicy='single_host_origin'\n                />\n                <Grid container justifyContent='flex-end'>\n                    <Grid item>\n                        <Button onClick={switchMode}>\n                            { isSignup ? 'Already have account? Sign In' : \"Don't have an account? Sign Up \" }\n                        </Button>\n                    </Grid>\n                </Grid>\n            </form>\n        </Paper>\n    </Container>\n  );\n}\n\nexport default Auth"]},"metadata":{},"sourceType":"module"}