{"ast":null,"code":"var _jsxFileName = \"/home/decoz/Projects/ReactJS/mern_memo_project/client/src/components/Auth/Auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Avatar, Button, Paper, Grid, Typography, Container, TextField } from '@material-ui/core';\nimport { GoogleLogin } from 'react-google-login';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport useStyles from './styles';\nimport Input from './Input';\nimport Icon from './Icon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Auth = () => {\n  _s();\n\n  const classes = useStyles();\n  const [showPassword, setShowPassword] = useState(false);\n  const [isSignup, setIsSignup] = useState(false);\n\n  const handleSubmit = () => {};\n\n  const handleChange = () => {};\n\n  const handleShowPassword = () => setShowPassword(!showPassword);\n\n  function switchMode() {\n    setIsSignup(!isSignup);\n    setShowPassword(false);\n  }\n\n  const googleSuccess = () => {};\n\n  const googleFailure = () => {\n    console.log('Google Sign In was unsuccessful, Try Again Later');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      elevation: 3,\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        className: classes.avatar,\n        children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: isSignup ? 'Sign Up' : 'Sign In'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.form,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [isSignup && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              name: \"firstName\",\n              label: \"First Name\",\n              handleChange: handleChange,\n              half: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"lastName\",\n              label: \"Last Name\",\n              handleChange: handleChange,\n              half: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"email\",\n            label: \"Email Address\",\n            handleChange: handleChange,\n            type: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"password\",\n            label: \"Password\",\n            handleChange: handleChange,\n            type: showPassword ? 'text' : 'password',\n            handleShowPassword: handleShowPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this), isSignup && /*#__PURE__*/_jsxDEV(Input, {\n            name: \"confirmPasswod\",\n            label: \"Repeat Password\",\n            handleChange: handleChange,\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.submit,\n          children: isSignup ? 'Sign Up' : 'Sign In'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n          clientId: \"google id\",\n          render: renderProps => {\n            /*#__PURE__*/\n            _jsxDEV(Button, {\n              className: classes.googleButton,\n              color: \"primary\",\n              fullWidth: true,\n              onClick: renderProps.onClick,\n              disabled: renderProps.disabled,\n              startIcon: /*#__PURE__*/_jsxDEV(Icon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 36\n              }, this),\n              variant: \"contained\",\n              children: \"Google Sign In\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 25\n            }, this);\n          },\n          onSuccess: googleSuccess,\n          onFailure: googleFailure,\n          cookiePolicy: \"single_host_origin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justifyContent: \"flex-end\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: switchMode,\n              children: isSignup ? 'Already have account? Sign In' : \"Don't have an account? Sign Up \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Auth, \"L/0RFYyCPsSGMEQ9PXERxKrUEQE=\", false, function () {\n  return [useStyles];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["/home/decoz/Projects/ReactJS/mern_memo_project/client/src/components/Auth/Auth.js"],"names":["React","useState","Avatar","Button","Paper","Grid","Typography","Container","TextField","GoogleLogin","LockOutlinedIcon","useStyles","Input","Icon","Auth","classes","showPassword","setShowPassword","isSignup","setIsSignup","handleSubmit","handleChange","handleShowPassword","switchMode","googleSuccess","googleFailure","console","log","paper","avatar","form","submit","renderProps","googleButton","onClick","disabled"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Avatar, Button, Paper, Grid, Typography, Container, TextField } from '@material-ui/core'\nimport {GoogleLogin} from 'react-google-login'\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\n\nimport useStyles from './styles'\nimport Input from './Input'\nimport Icon from './Icon'\n\nconst Auth = () => {\n    const classes = useStyles()\n\n    const [showPassword, setShowPassword] = useState(false)\n    const [isSignup, setIsSignup] = useState(false)\n\n    const handleSubmit = () => {\n\n    }\n\n    const handleChange = () => {\n\n    }\n\n    const handleShowPassword = () => setShowPassword(!showPassword) \n\n    function switchMode() {\n        setIsSignup(!isSignup)\n        setShowPassword(false)\n    }\n\n    const googleSuccess = () => {\n        \n    }\n\n    const googleFailure = () => {\n        console.log('Google Sign In was unsuccessful, Try Again Later')\n    }\n\n  return (\n    <Container component='main' maxWidth='xs'>\n        <Paper className={classes.paper} elevation={3}>\n            <Avatar className={classes.avatar}>\n                <LockOutlinedIcon />\n            </Avatar>\n            <Typography variant='h5'>{isSignup ? 'Sign Up' : 'Sign In'}</Typography>\n            <form className={classes.form} onSubmit={handleSubmit}>\n                <Grid container spacing={2}>\n                    {\n                        isSignup && (\n                            <>\n                                <Input name='firstName' label='First Name' handleChange={handleChange}  half />\n                                <Input name='lastName' label='Last Name' handleChange={handleChange}  half />\n                            </>\n                        )\n                    }\n                    <Input name='email' label='Email Address' handleChange={handleChange} type='email' />\n                    <Input name='password' label='Password' handleChange={handleChange} type={showPassword ? 'text' : 'password'} handleShowPassword={handleShowPassword} />\n                    { isSignup && <Input name='confirmPasswod' label='Repeat Password' handleChange={handleChange} type='password' /> }\n                </Grid>\n                <Button type='submit' fullWidth variant='contained' color='primary' className={classes.submit}>\n                    { isSignup ? 'Sign Up' : 'Sign In'}\n                </Button>\n                <GoogleLogin \n                    clientId='google id'\n                    render={(renderProps) => {\n                        <Button \n                        className={classes.googleButton} \n                        color='primary'\n                        fullWidth \n                        onClick={renderProps.onClick} \n                        disabled={renderProps.disabled} \n                        startIcon={<Icon />} \n                        variant='contained'\n                        >\n                            Google Sign In\n                        </Button>\n                    }}\n                    onSuccess={googleSuccess}\n                    onFailure={googleFailure}\n                    cookiePolicy='single_host_origin'\n                />\n                <Grid container justifyContent='flex-end'>\n                    <Grid item>\n                        <Button onClick={switchMode}>\n                            { isSignup ? 'Already have account? Sign In' : \"Don't have an account? Sign Up \" }\n                        </Button>\n                    </Grid>\n                </Grid>\n            </form>\n        </Paper>\n    </Container>\n  );\n}\n\nexport default Auth"]},"metadata":{},"sourceType":"module"}