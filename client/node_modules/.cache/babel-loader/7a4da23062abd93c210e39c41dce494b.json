{"ast":null,"code":"var _jsxFileName = \"/home/decoz/Projects/ReactJS/mern_memo_project/client/src/components/Form/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport FileBase from 'react-file-base64';\nimport { useSelector } from 'react-redux';\nimport useStyles from './styles';\nimport { createPost, updatePost } from '../../actions/posts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = _ref => {\n  _s();\n\n  var _user$result3;\n\n  let {\n    currentId,\n    setCurrentId,\n    dispatch,\n    user\n  } = _ref;\n  const classes = useStyles();\n  const [postData, setPostData] = useState({\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: ''\n  });\n  const post = useSelector(state => currentId ? state.posts.find(p => p._id === currentId) : null); // posts is from reducer\n\n  console.log(user);\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (currentId) {\n      var _user$result;\n\n      dispatch(updatePost(currentId, { ...postData,\n        name: user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result.name\n      })); // name = post name of user as creator\n    } else {\n      var _user$result2;\n\n      dispatch(createPost({ ...postData,\n        name: user === null || user === void 0 ? void 0 : (_user$result2 = user.result) === null || _user$result2 === void 0 ? void 0 : _user$result2.name\n      }));\n    }\n\n    clear();\n  };\n\n  if (!(user !== null && user !== void 0 && (_user$result3 = user.result) !== null && _user$result3 !== void 0 && _user$result3.name)) {\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        align: \"center\",\n        children: \"Please Sign In to create moments and like other's moments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  }\n\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({\n      title: '',\n      message: '',\n      tags: '',\n      selectedFile: ''\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      className: `${classes.root} ${classes.form}`,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: [currentId ? 'Editing' : 'Creating', \" a Memory\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"title\",\n        variant: \"outlined\",\n        label: \"Title\",\n        fullWidth: true,\n        value: postData.title,\n        onChange: e => setPostData({ ...postData,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"message\",\n        variant: \"outlined\",\n        label: \"Message\",\n        fullWidth: true,\n        value: postData.message,\n        onChange: e => setPostData({ ...postData,\n          message: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"tags\",\n        variant: \"outlined\",\n        label: \"Tags\",\n        fullWidth: true,\n        value: postData.tags,\n        onChange: e => setPostData({ ...postData,\n          tags: e.target.value.split(',')\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.fileInput,\n        children: /*#__PURE__*/_jsxDEV(FileBase, {\n          type: \"file\",\n          multiple: false,\n          onDone: _ref2 => {\n            let {\n              base64\n            } = _ref2;\n            return setPostData({ ...postData,\n              selectedFile: base64\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.buttonSubmit,\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        type: \"submit\",\n        fullWidth: true,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        size: \"small\",\n        onClick: clear,\n        fullWidth: true,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Form, \"nDoRpuidMSbcr4MoeSGXRL8jqVA=\", false, function () {\n  return [useStyles, useSelector];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/home/decoz/Projects/ReactJS/mern_memo_project/client/src/components/Form/Form.js"],"names":["React","useEffect","useState","TextField","Button","Typography","Paper","FileBase","useSelector","useStyles","createPost","updatePost","Form","currentId","setCurrentId","dispatch","user","classes","postData","setPostData","title","message","tags","selectedFile","post","state","posts","find","p","_id","console","log","handleSubmit","e","preventDefault","name","result","clear","paper","root","form","target","value","split","fileInput","base64","buttonSubmit"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { TextField, Button, Typography, Paper } from '@material-ui/core'\nimport FileBase from 'react-file-base64'\nimport { useSelector } from 'react-redux'\n\nimport useStyles from './styles'\nimport { createPost, updatePost } from '../../actions/posts'\n\nconst Form = ({ currentId, setCurrentId, dispatch, user }) => {\n    const classes = useStyles()\n    const [ postData, setPostData] = useState({ title : '', message : '', tags : '', selectedFile: '', })\n    const post = useSelector((state) => currentId ? state.posts.find((p) => p._id === currentId) : null ) // posts is from reducer\n    console.log(user)\n\n    useEffect(() => {\n        if(post) setPostData(post)\n    }, [post])\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        if(currentId){\n\n            dispatch(updatePost(currentId, { ...postData, name : user?.result?.name })) // name = post name of user as creator\n        }else{\n            dispatch(createPost({ ...postData, name : user?.result?.name }))\n        }\n        clear()\n    }\n\n    if(!user?.result?.name){\n        return (\n            <Paper className={classes.paper} >\n                <Typography variant='h6' align='center' >\n                    Please Sign In to create moments and like other's moments\n                </Typography>\n            </Paper>\n        )\n    }\n\n    const clear = () => {\n        setCurrentId(0)\n        setPostData({ title : '', message : '', tags : '', selectedFile: '', })\n    }\n\n  return (\n        <Paper className={classes.paper}>\n            <form autoComplete='off' noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n                <Typography variant='h6'>{ currentId ? 'Editing' : 'Creating'} a Memory</Typography>\n                <TextField \n                name='title' \n                variant='outlined' \n                label='Title' \n                fullWidth \n                value={postData.title} \n                onChange={(e) => setPostData({ ...postData, title : e.target.value })} \n                />\n                <TextField \n                name='message' \n                variant='outlined' \n                label='Message' \n                fullWidth \n                value={postData.message} \n                onChange={(e) => setPostData({ ...postData, message : e.target.value })} \n                />\n                <TextField \n                name='tags' \n                variant='outlined' \n                label='Tags' \n                fullWidth \n                value={postData.tags} \n                onChange={(e) => setPostData({ ...postData, tags : e.target.value.split(',') })} \n                />\n                <div className={classes.fileInput}>\n                    <FileBase \n                    type=\"file\" \n                    multiple={false} \n                    onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} />\n                </div>\n                <Button className={classes.buttonSubmit} variant='contained' color='primary' size='large' type='submit' fullWidth >Submit</Button>\n                <Button variant='contained' color='secondary' size='small' onClick={clear} fullWidth >Clear</Button>\n            </form>\n        </Paper>\n    )\n}\n\nexport default Form"]},"metadata":{},"sourceType":"module"}