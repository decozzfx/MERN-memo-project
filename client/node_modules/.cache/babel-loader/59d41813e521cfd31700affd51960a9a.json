{"ast":null,"code":"var _jsxFileName = \"/home/decoz/Projects/ReactJS/mern_memo_project/client/src/components/Form/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport FileBase from 'react-file-base64';\nimport { useSelector } from 'react-redux';\nimport useStyles from './styles';\nimport { createPost, updatePost, getPosts } from '../../actions/posts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = _ref => {\n  _s();\n\n  let {\n    currentId,\n    setCurrentId\n  } = _ref;\n  const classes = useStyles();\n  const [postData, setPostData] = useState({\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: ''\n  });\n  const post = useSelector(state => currentId ? state.posts.find(p => p._id === currentId) : null); // posts is from reducer\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (currentId) {\n      dispatch(updatePost(currentId, postData));\n    } else {\n      dispatch(createPost(postData));\n    }\n\n    clear();\n    dispatch(getPosts());\n  };\n\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({\n      title: '',\n      message: '',\n      tags: '',\n      selectedFile: ''\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      className: `${classes.root} ${classes.form}`,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: [currentId ? 'Editing' : 'Creating', \" a Memory\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"title\",\n        variant: \"outlined\",\n        label: \"Title\",\n        fullWidth: true,\n        value: postData.title,\n        onChange: e => setPostData({ ...postData,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"message\",\n        variant: \"outlined\",\n        label: \"Message\",\n        fullWidth: true,\n        value: postData.message,\n        onChange: e => setPostData({ ...postData,\n          message: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"tags\",\n        variant: \"outlined\",\n        label: \"Tags\",\n        fullWidth: true,\n        value: postData.tags,\n        onChange: e => setPostData({ ...postData,\n          tags: e.target.value.split(',')\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.fileInput,\n        children: /*#__PURE__*/_jsxDEV(FileBase, {\n          type: \"file\",\n          multiple: false,\n          onDone: _ref2 => {\n            let {\n              base64\n            } = _ref2;\n            return setPostData({ ...postData,\n              selectedFile: base64\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.buttonSubmit,\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        type: \"submit\",\n        fullWidth: true,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        size: \"small\",\n        onClick: clear,\n        fullWidth: true,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Form, \"Lfj1TR7/DHNyh2ef2Kqi/9tvTv0=\", false, function () {\n  return [useStyles, useSelector, useDispatch];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/home/decoz/Projects/ReactJS/mern_memo_project/client/src/components/Form/Form.js"],"names":["React","useEffect","useState","TextField","Button","Typography","Paper","useDispatch","FileBase","useSelector","useStyles","createPost","updatePost","getPosts","Form","currentId","setCurrentId","classes","postData","setPostData","title","message","tags","selectedFile","post","state","posts","find","p","_id","dispatch","handleSubmit","e","preventDefault","clear","paper","root","form","target","value","split","fileInput","base64","buttonSubmit"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,UAA5B,EAAwCC,KAAxC,QAAqD,mBAArD;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAOC,SAAP,MAAsB,UAAtB;AACA,SAASC,UAAT,EAAqBC,UAArB,EAAiCC,QAAjC,QAAiD,qBAAjD;;;AAEA,MAAMC,IAAI,GAAG,QAAiC;AAAA;;AAAA,MAAhC;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAAgC;AAC1C,QAAMC,OAAO,GAAGP,SAAS,EAAzB;AACA,QAAM,CAAEQ,QAAF,EAAYC,WAAZ,IAA2BjB,QAAQ,CAAC;AAAEkB,IAAAA,KAAK,EAAG,EAAV;AAAcC,IAAAA,OAAO,EAAG,EAAxB;AAA4BC,IAAAA,IAAI,EAAG,EAAnC;AAAuCC,IAAAA,YAAY,EAAE;AAArD,GAAD,CAAzC;AACA,QAAMC,IAAI,GAAGf,WAAW,CAAEgB,KAAD,IAAWV,SAAS,GAAGU,KAAK,CAACC,KAAN,CAAYC,IAAZ,CAAkBC,CAAD,IAAOA,CAAC,CAACC,GAAF,KAAUd,SAAlC,CAAH,GAAkD,IAAvE,CAAxB,CAH0C,CAG4D;;AAEtG,QAAMe,QAAQ,GAAGvB,WAAW,EAA5B;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGuB,IAAH,EAASL,WAAW,CAACK,IAAD,CAAX;AACZ,GAFQ,EAEN,CAACA,IAAD,CAFM,CAAT;;AAIA,QAAMO,YAAY,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;;AAEA,QAAGlB,SAAH,EAAa;AAETe,MAAAA,QAAQ,CAAClB,UAAU,CAACG,SAAD,EAAYG,QAAZ,CAAX,CAAR;AACH,KAHD,MAGK;AACDY,MAAAA,QAAQ,CAACnB,UAAU,CAACO,QAAD,CAAX,CAAR;AACH;;AACDgB,IAAAA,KAAK;AACLJ,IAAAA,QAAQ,CAACjB,QAAQ,EAAT,CAAR;AACH,GAXD;;AAaA,QAAMqB,KAAK,GAAG,MAAM;AAChBlB,IAAAA,YAAY,CAAC,CAAD,CAAZ;AACAG,IAAAA,WAAW,CAAC;AAAEC,MAAAA,KAAK,EAAG,EAAV;AAAcC,MAAAA,OAAO,EAAG,EAAxB;AAA4BC,MAAAA,IAAI,EAAG,EAAnC;AAAuCC,MAAAA,YAAY,EAAE;AAArD,KAAD,CAAX;AACH,GAHD;;AAKF,sBACM,QAAC,KAAD;AAAO,IAAA,SAAS,EAAEN,OAAO,CAACkB,KAA1B;AAAA,2BACI;AAAM,MAAA,YAAY,EAAC,KAAnB;AAAyB,MAAA,UAAU,MAAnC;AAAoC,MAAA,SAAS,EAAG,GAAElB,OAAO,CAACmB,IAAK,IAAGnB,OAAO,CAACoB,IAAK,EAA/E;AAAkF,MAAA,QAAQ,EAAEN,YAA5F;AAAA,8BACI,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAA,mBAA2BhB,SAAS,GAAG,SAAH,GAAe,UAAnD;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,SAAD;AACA,QAAA,IAAI,EAAC,OADL;AAEA,QAAA,OAAO,EAAC,UAFR;AAGA,QAAA,KAAK,EAAC,OAHN;AAIA,QAAA,SAAS,MAJT;AAKA,QAAA,KAAK,EAAEG,QAAQ,CAACE,KALhB;AAMA,QAAA,QAAQ,EAAGY,CAAD,IAAOb,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeE,UAAAA,KAAK,EAAGY,CAAC,CAACM,MAAF,CAASC;AAAhC,SAAD;AAN5B;AAAA;AAAA;AAAA;AAAA,cAFJ,eAUI,QAAC,SAAD;AACA,QAAA,IAAI,EAAC,SADL;AAEA,QAAA,OAAO,EAAC,UAFR;AAGA,QAAA,KAAK,EAAC,SAHN;AAIA,QAAA,SAAS,MAJT;AAKA,QAAA,KAAK,EAAErB,QAAQ,CAACG,OALhB;AAMA,QAAA,QAAQ,EAAGW,CAAD,IAAOb,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeG,UAAAA,OAAO,EAAGW,CAAC,CAACM,MAAF,CAASC;AAAlC,SAAD;AAN5B;AAAA;AAAA;AAAA;AAAA,cAVJ,eAkBI,QAAC,SAAD;AACA,QAAA,IAAI,EAAC,MADL;AAEA,QAAA,OAAO,EAAC,UAFR;AAGA,QAAA,KAAK,EAAC,MAHN;AAIA,QAAA,SAAS,MAJT;AAKA,QAAA,KAAK,EAAErB,QAAQ,CAACI,IALhB;AAMA,QAAA,QAAQ,EAAGU,CAAD,IAAOb,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeI,UAAAA,IAAI,EAAGU,CAAC,CAACM,MAAF,CAASC,KAAT,CAAeC,KAAf,CAAqB,GAArB;AAAtB,SAAD;AAN5B;AAAA;AAAA;AAAA;AAAA,cAlBJ,eA0BI;AAAK,QAAA,SAAS,EAAEvB,OAAO,CAACwB,SAAxB;AAAA,+BACI,QAAC,QAAD;AACA,UAAA,IAAI,EAAC,MADL;AAEA,UAAA,QAAQ,EAAE,KAFV;AAGA,UAAA,MAAM,EAAE;AAAA,gBAAC;AAAEC,cAAAA;AAAF,aAAD;AAAA,mBAAgBvB,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeK,cAAAA,YAAY,EAAEmB;AAA7B,aAAD,CAA3B;AAAA;AAHR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cA1BJ,eAgCI,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAEzB,OAAO,CAAC0B,YAA3B;AAAyC,QAAA,OAAO,EAAC,WAAjD;AAA6D,QAAA,KAAK,EAAC,SAAnE;AAA6E,QAAA,IAAI,EAAC,OAAlF;AAA0F,QAAA,IAAI,EAAC,QAA/F;AAAwG,QAAA,SAAS,MAAjH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhCJ,eAiCI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,KAAK,EAAC,WAAlC;AAA8C,QAAA,IAAI,EAAC,OAAnD;AAA2D,QAAA,OAAO,EAAET,KAApE;AAA2E,QAAA,SAAS,MAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADN;AAuCD,CApED;;GAAMpB,I;UACcJ,S,EAEHD,W,EAEIF,W;;;KALfO,I;AAsEN,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { TextField, Button, Typography, Paper } from '@material-ui/core'\nimport { useDispatch } from 'react-redux'\nimport FileBase from 'react-file-base64'\nimport { useSelector } from 'react-redux'\n\nimport useStyles from './styles'\nimport { createPost, updatePost, getPosts } from '../../actions/posts'\n\nconst Form = ({ currentId, setCurrentId }) => {\n    const classes = useStyles()\n    const [ postData, setPostData] = useState({ title : '', message : '', tags : '', selectedFile: '', })\n    const post = useSelector((state) => currentId ? state.posts.find((p) => p._id === currentId) : null ) // posts is from reducer\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        if(post) setPostData(post)\n    }, [post])\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        if(currentId){\n\n            dispatch(updatePost(currentId, postData))\n        }else{\n            dispatch(createPost(postData))\n        }\n        clear()\n        dispatch(getPosts())\n    }\n\n    const clear = () => {\n        setCurrentId(0)\n        setPostData({ title : '', message : '', tags : '', selectedFile: '', })\n    }\n\n  return (\n        <Paper className={classes.paper}>\n            <form autoComplete='off' noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n                <Typography variant='h6'>{ currentId ? 'Editing' : 'Creating'} a Memory</Typography>\n                <TextField \n                name='title' \n                variant='outlined' \n                label='Title' \n                fullWidth \n                value={postData.title} \n                onChange={(e) => setPostData({ ...postData, title : e.target.value })} \n                />\n                <TextField \n                name='message' \n                variant='outlined' \n                label='Message' \n                fullWidth \n                value={postData.message} \n                onChange={(e) => setPostData({ ...postData, message : e.target.value })} \n                />\n                <TextField \n                name='tags' \n                variant='outlined' \n                label='Tags' \n                fullWidth \n                value={postData.tags} \n                onChange={(e) => setPostData({ ...postData, tags : e.target.value.split(',') })} \n                />\n                <div className={classes.fileInput}>\n                    <FileBase \n                    type=\"file\" \n                    multiple={false} \n                    onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} />\n                </div>\n                <Button className={classes.buttonSubmit} variant='contained' color='primary' size='large' type='submit' fullWidth >Submit</Button>\n                <Button variant='contained' color='secondary' size='small' onClick={clear} fullWidth >Clear</Button>\n            </form>\n        </Paper>\n    )\n}\n\nexport default Form"]},"metadata":{},"sourceType":"module"}