{"ast":null,"code":"var _jsxFileName = \"/home/decoz/Projects/ReactJS/mern_memo_project/client/src/components/Form/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport FileBase from 'react-file-base64';\nimport { useDispatch } from 'react-redux';\nimport useStyles from './styles';\nimport { createPost } from '../../actions/posts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = () => {\n  _s();\n\n  const classes = useStyles();\n  const [postData, setPostData] = useState({\n    creator: '',\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: ''\n  });\n  const dispatch = useDispatch();\n\n  const handleSubmit = () => {\n    e.preventDefault();\n    dispatch(createPost(postData));\n  };\n\n  const clear = () => {};\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      className: `${classes.root} ${classes.form}`,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Creating a Memory\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"creator\",\n        variant: \"outlined\",\n        label: \"Creator\",\n        fullWidth: true,\n        value: postData.creator,\n        onChange: e => setPostData({ ...postData,\n          creator: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"title\",\n        variant: \"outlined\",\n        label: \"Title\",\n        fullWidth: true,\n        value: postData.title,\n        onChange: e => setPostData({ ...postData,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"message\",\n        variant: \"outlined\",\n        label: \"Message\",\n        fullWidth: true,\n        value: postData.message,\n        onChange: e => setPostData({ ...postData,\n          message: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"tags\",\n        variant: \"outlined\",\n        label: \"Tags\",\n        fullWidth: true,\n        value: postData.tags,\n        onChange: e => setPostData({ ...postData,\n          tags: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.fileInput,\n        children: /*#__PURE__*/_jsxDEV(FileBase, {\n          type: \"file\",\n          multiple: false,\n          onDone: _ref => {\n            let {\n              base64\n            } = _ref;\n            return setPostData({ ...postData,\n              selectedFile: base64\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.buttonSubmit,\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        type: \"submit\",\n        fullWidth: true,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        size: \"small\",\n        onClick: clear,\n        fullWidth: true,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Form, \"m/y8g1VQ5O8KkTFb6iwM7fgjyIY=\", false, function () {\n  return [useStyles, useDispatch];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/home/decoz/Projects/ReactJS/mern_memo_project/client/src/components/Form/Form.js"],"names":["React","useState","TextField","Button","Typography","Paper","FileBase","useDispatch","useStyles","createPost","Form","classes","postData","setPostData","creator","title","message","tags","selectedFile","dispatch","handleSubmit","e","preventDefault","clear","paper","root","form","target","value","fileInput","base64","buttonSubmit"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { TextField, Button, Typography, Paper } from '@material-ui/core'\nimport FileBase from 'react-file-base64'\nimport { useDispatch } from 'react-redux'\n\nimport useStyles from './styles'\nimport { createPost } from '../../actions/posts'\n\nconst Form = () => {\n    const classes = useStyles()\n    const [ postData, setPostData] = useState({ creator : '', title : '', message : '', tags : '', selectedFile: '', })\n    const dispatch = useDispatch()\n\n    const handleSubmit = () => {\n        e.preventDefault()\n        dispatch(createPost(postData))\n    }\n\n    const clear = () => {\n\n    }\n\n  return (\n        <Paper className={classes.paper}>\n            <form autoComplete='off' noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n                <Typography variant='h6'>Creating a Memory</Typography>\n                <TextField \n                name='creator' \n                variant='outlined' \n                label='Creator' \n                fullWidth \n                value={postData.creator} \n                onChange={(e) => setPostData({ ...postData, creator : e.target.value })} \n                />\n                <TextField \n                name='title' \n                variant='outlined' \n                label='Title' \n                fullWidth \n                value={postData.title} \n                onChange={(e) => setPostData({ ...postData, title : e.target.value })} \n                />\n                <TextField \n                name='message' \n                variant='outlined' \n                label='Message' \n                fullWidth \n                value={postData.message} \n                onChange={(e) => setPostData({ ...postData, message : e.target.value })} \n                />\n                <TextField \n                name='tags' \n                variant='outlined' \n                label='Tags' \n                fullWidth \n                value={postData.tags} \n                onChange={(e) => setPostData({ ...postData, tags : e.target.value })} \n                />\n                <div className={classes.fileInput}>\n                    <FileBase\n                        type='file'\n                        multiple={false}\n                        onDone={({base64}) => setPostData({ ...postData, selectedFile : base64 })}\n                    />\n                </div>\n                <Button className={classes.buttonSubmit} variant='contained' color='primary' size='large' type='submit' fullWidth >Submit</Button>\n                <Button variant='contained' color='secondary' size='small' onClick={clear} fullWidth >Clear</Button>\n            </form>\n        </Paper>\n    )\n}\n\nexport default Form"]},"metadata":{},"sourceType":"module"}