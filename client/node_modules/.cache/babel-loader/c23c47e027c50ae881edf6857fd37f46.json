{"ast":null,"code":"var _jsxFileName = \"/home/decoz/Projects/ReactJS/mern_memo_project/client/src/components/Navbar/Navbar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useNavigate } from 'react-router-dom';\nimport { AppBar, Typography, Toolbar, Avatar, Button } from '@material-ui/core';\nimport { useDispatch } from \"react-redux\";\nimport useStyles from './styles';\nimport memories from '../../images/memories.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Navbar = () => {\n  _s();\n\n  const classes = useStyles();\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\n  const dispatch = useDispatch();\n  const Navigate = useNavigate();\n\n  const logout = () => {\n    dispatch({\n      type: 'LOGOUT'\n    });\n    Navigate('/');\n    setUser(null);\n  }; // useEffect(() => {\n  //     const token = user?.token\n  //     //JWT...\n  //     setUser(JSON.parse(localStorage.getItem('profile')))\n  // },[])\n\n\n  return /*#__PURE__*/_jsxDEV(AppBar, {\n    className: classes.appBar,\n    position: \"static\",\n    color: \"inherit\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.brandContainer,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: Link,\n        to: \"/\",\n        className: classes.heading,\n        variant: \"h2\",\n        align: \"center\",\n        children: \"Memories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: classes.image,\n        src: memories,\n        height: \"60\",\n        alt: \"memories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Toolbar, {\n      className: classes.toolbar,\n      children: user ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.profile,\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          className: classes.avatar,\n          alt: user.result.name,\n          src: user.result.imageUrl,\n          children: user.result.name.charAt(0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.userName,\n          variant: \"h6\",\n          children: user.result.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          onClick: logout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        component: Link,\n        to: \"/auth\",\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Navbar, \"S/IE0zTAOyaCdpI7AEI7/nlev1w=\", false, function () {\n  return [useStyles, useDispatch, useNavigate];\n});\n\n_c = Navbar;\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["/home/decoz/Projects/ReactJS/mern_memo_project/client/src/components/Navbar/Navbar.js"],"names":["React","useEffect","useState","Link","useNavigate","AppBar","Typography","Toolbar","Avatar","Button","useDispatch","useStyles","memories","Navbar","classes","user","setUser","JSON","parse","localStorage","getItem","dispatch","Navigate","logout","type","appBar","brandContainer","heading","image","toolbar","profile","avatar","result","name","imageUrl","charAt","userName"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link, useNavigate } from 'react-router-dom'\nimport { AppBar, Typography, Toolbar, Avatar, Button } from '@material-ui/core'\nimport { useDispatch } from \"react-redux\";\n\nimport useStyles from './styles'\nimport memories from '../../images/memories.png'\n\n\nconst Navbar = () => {\n    const classes = useStyles()\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')))\n    const dispatch = useDispatch()\n    const Navigate = useNavigate()\n    \n    const logout = () => {\n        dispatch({ type: 'LOGOUT' })\n        \n        Navigate('/')\n\n        setUser(null)\n    }\n\n    // useEffect(() => {\n    //     const token = user?.token\n\n    //     //JWT...\n\n    //     setUser(JSON.parse(localStorage.getItem('profile')))\n    // },[])\n\n  return (\n    <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\n        <div className={classes.brandContainer}>\n            <Typography component={Link} to='/' className={classes.heading} variant=\"h2\" align=\"center\">Memories</Typography>\n            <img className={classes.image} src={memories} height=\"60\" alt=\"memories\" />    \n        </div>\n        <Toolbar className={classes.toolbar}>\n            {user ? (\n                <div className={classes.profile}>\n                    <Avatar className={classes.avatar} alt={user.result.name} src={user.result.imageUrl}>{user.result.name.charAt(0)}</Avatar>\n                    <Typography className={classes.userName} variant='h6'>{user.result.name}</Typography>\n                    <Button variant='contained' color='secondary' onClick={logout}>Logout</Button>\n                </div>\n            ):(\n                <Button component={Link} to='/auth' variant='contained' color='primary'>Login</Button>\n            )}\n        </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Navbar;\n"]},"metadata":{},"sourceType":"module"}