{"ast":null,"code":"import axios from 'axios';\nconst API = axios.create({\n  baseURL: 'http://localhost:5000'\n}); // adding auth middleware, adding something each request\n// have to send token to the backend to verify for login status\n\nAPI.interceptors.request.use(req => {\n  if (localStorage.getItem('profile')) {\n    req.headers.authorization = `Bearer ${JSON.parse(localStorage.getItem('profile')).token}`;\n  }\n\n  return req;\n}); // const url = 'https://post-moment-app.herokuapp.com/posts'\n\nconst postsRoute = '/posts';\nconst usersRoute = '/user';\nexport const fetchPosts = page => API.get(`${postsRoute}?page=${page}`);\nexport const fetchPostBySearch = searchQuery => API.get(`${postsRoute}/search?searchQuery=${searchQuery.search || 'none'}&tags=${searchQuery.tags}`);\nexport const createPost = newPost => API.post(postsRoute, newPost);\nexport const likePost = id => API.patch(`${postsRoute}/${id}/likepost`);\nexport const updatePost = (id, updatedPost) => API.patch(`${postsRoute}/${id}`, updatedPost);\nexport const deletePost = id => API.delete(`${postsRoute}/${id}`);\nexport const signIn = formData => API.post(`${usersRoute}/signin`, formData);\nexport const signUp = formData => API.post(`${usersRoute}/signup`, formData);","map":{"version":3,"sources":["/home/decoz/Projects/ReactJS/mern_memo_project/client/src/api/index.js"],"names":["axios","API","create","baseURL","interceptors","request","use","req","localStorage","getItem","headers","authorization","JSON","parse","token","postsRoute","usersRoute","fetchPosts","page","get","fetchPostBySearch","searchQuery","search","tags","createPost","newPost","post","likePost","id","patch","updatePost","updatedPost","deletePost","delete","signIn","formData","signUp"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAN,CAAa;AAAEC,EAAAA,OAAO,EAAG;AAAZ,CAAb,CAAZ,C,CAEA;AACA;;AACAF,GAAG,CAACG,YAAJ,CAAiBC,OAAjB,CAAyBC,GAAzB,CAA8BC,GAAD,IAAS;AAClC,MAAGC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAH,EAAmC;AAC/BF,IAAAA,GAAG,CAACG,OAAJ,CAAYC,aAAZ,GAA6B,UAASC,IAAI,CAACC,KAAL,CAAWL,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,EAA4CK,KAAM,EAAxF;AACH;;AAED,SAAOP,GAAP;AACH,CAND,E,CAQA;;AACA,MAAMQ,UAAU,GAAG,QAAnB;AACA,MAAMC,UAAU,GAAG,OAAnB;AAEA,OAAO,MAAMC,UAAU,GAAIC,IAAD,IAAUjB,GAAG,CAACkB,GAAJ,CAAS,GAAEJ,UAAW,SAAQG,IAAK,EAAnC,CAA7B;AACP,OAAO,MAAME,iBAAiB,GAAIC,WAAD,IAAiBpB,GAAG,CAACkB,GAAJ,CAAS,GAAEJ,UAAW,uBAAsBM,WAAW,CAACC,MAAZ,IAAsB,MAAO,SAAQD,WAAW,CAACE,IAAK,EAAlG,CAA3C;AACP,OAAO,MAAMC,UAAU,GAAIC,OAAD,IAAaxB,GAAG,CAACyB,IAAJ,CAASX,UAAT,EAAqBU,OAArB,CAAhC;AACP,OAAO,MAAME,QAAQ,GAAIC,EAAD,IAAQ3B,GAAG,CAAC4B,KAAJ,CAAW,GAAEd,UAAW,IAAGa,EAAG,WAA9B,CAAzB;AACP,OAAO,MAAME,UAAU,GAAG,CAACF,EAAD,EAAKG,WAAL,KAAqB9B,GAAG,CAAC4B,KAAJ,CAAW,GAAEd,UAAW,IAAGa,EAAG,EAA9B,EAAiCG,WAAjC,CAAxC;AACP,OAAO,MAAMC,UAAU,GAAIJ,EAAD,IAAQ3B,GAAG,CAACgC,MAAJ,CAAY,GAAElB,UAAW,IAAGa,EAAG,EAA/B,CAA3B;AAEP,OAAO,MAAMM,MAAM,GAAIC,QAAD,IAAclC,GAAG,CAACyB,IAAJ,CAAU,GAAEV,UAAW,SAAvB,EAAiCmB,QAAjC,CAA7B;AACP,OAAO,MAAMC,MAAM,GAAID,QAAD,IAAclC,GAAG,CAACyB,IAAJ,CAAU,GAAEV,UAAW,SAAvB,EAAiCmB,QAAjC,CAA7B","sourcesContent":["import axios from 'axios'\n\nconst API = axios.create({ baseURL : 'http://localhost:5000' })\n\n// adding auth middleware, adding something each request\n// have to send token to the backend to verify for login status\nAPI.interceptors.request.use((req) => {\n    if(localStorage.getItem('profile')){\n        req.headers.authorization = `Bearer ${JSON.parse(localStorage.getItem('profile')).token}`\n    }\n\n    return req\n})\n\n// const url = 'https://post-moment-app.herokuapp.com/posts'\nconst postsRoute = '/posts'\nconst usersRoute = '/user'\n\nexport const fetchPosts = (page) => API.get(`${postsRoute}?page=${page}`)\nexport const fetchPostBySearch = (searchQuery) => API.get(`${postsRoute}/search?searchQuery=${searchQuery.search || 'none'}&tags=${searchQuery.tags}`)\nexport const createPost = (newPost) => API.post(postsRoute, newPost)\nexport const likePost = (id) => API.patch(`${postsRoute}/${id}/likepost`)\nexport const updatePost = (id, updatedPost) => API.patch(`${postsRoute}/${id}`, updatedPost)\nexport const deletePost = (id) => API.delete(`${postsRoute}/${id}`)\n\nexport const signIn = (formData) => API.post(`${usersRoute}/signin`, formData)\nexport const signUp = (formData) => API.post(`${usersRoute}/signup`, formData)"]},"metadata":{},"sourceType":"module"}